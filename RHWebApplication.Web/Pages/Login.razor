@attribute [AllowAnonymous]
@inject HttpClient Http
@inject CustomAuthStateProvider AuthStateProvider
@inject NavigationManager NavigationManager
@page "/Login"

<PageTitle>Login</PageTitle>
<MudContainer Class="d-flex justify-center align-center" Style="height: 100vh;">
    <MudCard Style="width: 60%;">
        <MudCardContent>
            <MudForm>
                <MudText Typo="Typo.h5">Login</MudText>
                <MudTextField @bind-Value="loginRequest.Login" Label="Username" Required="true" />
                <MudTextField @bind-Value="loginRequest.Password" Label="Password" InputType="InputType.Password" Required="true" />
                <MudButton Type="Submit" Color="Color.Primary" OnClick="HandleLoginAsync">Login</MudButton>
            </MudForm>
        </MudCardContent>
    </MudCard>
</MudContainer>

@code {

    private LoginRequest loginRequest = new();
    public async Task HandleLoginAsync()
    {
        var response = await Http.PostAsJsonAsync("/login", loginRequest);
        if (response.IsSuccessStatusCode)
        {
            string? token = await response.Content.ReadAsStringAsync();
            await AuthStateProvider.Login(token);
            NavigationManager.NavigateTo("/Home");
         }
         else
         {
             Console.WriteLine("Login falhou! Verifique suas credenciais.");
         }
    }
}
